{"version":3,"file":"component---src-pages-certifications-js-7c46137a7585afaa4095.js","mappings":"4IA0BA,IAxBa,SAAAA,GACX,OACE,2BAAOC,UAAU,cACf,+BACE,4BACE,wBAAIA,UAAU,aAAaD,EAAME,MAAQ,IACzC,wBAAID,UAAU,aAAaD,EAAMG,MAAQ,KAE3C,4BACE,wBAAIF,UAAU,YAAYD,EAAMI,KAAO,IACvC,wBAAIH,UAAU,cAAcD,EAAMK,OAAS,KAE7C,4BACE,wBACEJ,UAAU,iBACVK,QAAS,EACTC,wBAAyB,CAAEC,OAAQR,EAAMS,iB,6GClBrD,EAAe,IAA0B,8ECAzC,EAAe,IAA0B,yECgBzC,EAZc,SAAAT,GASZ,MANmB,cAAfA,EAAME,KACA,yBAAKQ,OAAO,MAAMC,MAAM,MAAMC,IAAKC,IAEnC,yBAAKH,OAAO,MAAMC,MAAM,MAAMC,IAAKE,K,UCF/C,WAAed,GACb,IAgBMe,GAhBOC,EAAAA,EAAAA,IAAe,cAgBAC,KAAKC,aAAaH,eAAeI,KAC3D,SAACC,EAAMC,GAAP,OACE,+BACE,4BACE,wBAAIC,MAAO,CAAEX,MAAO,UAClB,kBAAC,EAAD,CAAOT,KAAMkB,EAAKG,SAEpB,4BACE,kBAAC,IAAD,CACEC,IAAKH,EACLnB,KAAMkB,EAAKK,KACXtB,KAAMiB,EAAKjB,KACXC,IAAKgB,EAAKM,OACVjB,SAAUW,EAAKO,eAQ3B,OACE,kBAAC,IAAD,CACEC,UAAU,iBACVC,gBAAgB,iCAEfd","sources":["webpack://gatsby-profile/./src/components/item.js","webpack://gatsby-profile/./static/AWS-SolArchitect-Associate-2020.png","webpack://gatsby-profile/./static/AWS-CloudPractitioner-2020.png","webpack://gatsby-profile/./src/components/badge.js","webpack://gatsby-profile/./src/pages/certifications.js"],"sourcesContent":["import React from \"react\"\n\nconst Item = props => {\n  return (\n    <table className=\"item-table\">\n      <tbody>\n        <tr>\n          <td className=\"item-name\">{props.name || \"\"}</td>\n          <td className=\"item-when\">{props.when || \"\"}</td>\n        </tr>\n        <tr>\n          <td className=\"item-org\">{props.org || \"\"}</td>\n          <td className=\"item-where\">{props.where || \"\"}</td>\n        </tr>\n        <tr>\n          <td\n            className=\"item-more-info\"\n            colSpan={2}\n            dangerouslySetInnerHTML={{ __html: props.moreInfo }}\n          />\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nexport default Item\n","export default __webpack_public_path__ + \"static/AWS-SolArchitect-Associate-2020-8fcbeeb81080ac42b0c32360e5216326.png\";","export default __webpack_public_path__ + \"static/AWS-CloudPractitioner-2020-22b1cfaa334ae1bbc5f0d0d342c59000.png\";","import React from \"react\"\nimport ssa_badge from \"../../static/AWS-SolArchitect-Associate-2020.png\"\nimport cp_badge from \"../../static/AWS-CloudPractitioner-2020.png\"\n\nconst Badge = props => {\n  let badge\n\n  if (props.name === \"ssa_badge\") {\n    badge = <img height=\"125\" width=\"140\" src={ssa_badge} />\n  } else {\n    badge = <img height=\"125\" width=\"140\" src={cp_badge} />\n  }\n\n  return badge\n}\n\nexport default Badge\n","import React from \"react\"\nimport Layout from \"../components/layout\"\nimport Item from \"../components/item\"\nimport Badge from \"../components/badge\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\n// import Img from \"gatsby-image\" // to take image data and render it\n\nexport default props => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          certifications {\n            vendor\n            type\n            when\n            certID\n            badge\n          }\n        }\n      }\n    }\n  `)\n\n  const certifications = data.site.siteMetadata.certifications.map(\n    (item, index) => (\n      <table>\n        <tr>\n          <td style={{ width: \"140px\" }}>\n            <Badge name={item.badge}></Badge>\n          </td>\n          <td>\n            <Item\n              key={index}\n              name={item.type}\n              when={item.when}\n              org={item.vendor}\n              moreInfo={item.certID}\n            />\n          </td>\n        </tr>\n      </table>\n    )\n  )\n\n  return (\n    <Layout\n      pageTitle=\"Certifications\"\n      pageDescription=\"Certifications I've obtained.\"\n    >\n      {certifications}\n    </Layout>\n  )\n}\n"],"names":["props","className","name","when","org","where","colSpan","dangerouslySetInnerHTML","__html","moreInfo","height","width","src","ssa_badge","cp_badge","certifications","useStaticQuery","site","siteMetadata","map","item","index","style","badge","key","type","vendor","certID","pageTitle","pageDescription"],"sourceRoot":""}